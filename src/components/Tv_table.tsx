/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 tv_table.glb 
*/

import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("TTable/tv_table.glb");

  useEffect(() => {
    // Loop through all materials and set NearestFilter for their textures
    Object.values(materials).forEach((material: THREE.Material) => {
      if (
        material instanceof THREE.MeshBasicMaterial ||
        material instanceof THREE.MeshStandardMaterial
      ) {
        if (material.map) {
          material.map.minFilter = THREE.NearestFilter;
          material.map.magFilter = THREE.NearestFilter;
          material.map.needsUpdate = true;
        }
      }
    });
  }, [materials]);

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={(nodes.Cube200 as THREE.Mesh).geometry}
        material={materials.Wood_05}
        position={[-12.94, -1.476, 3.233]}
      />
    </group>
  );
}

useGLTF.preload("/tv_table.glb");
