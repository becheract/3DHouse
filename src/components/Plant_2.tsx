/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 plant_2.glb 
*/
import { useLoader } from "@react-three/fiber";
import { useEffect } from "react";
import { useGLTF, MeshWobbleMaterial } from "@react-three/drei";
import * as THREE from "three";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("Plant_2/plant_2.glb") as any;

  const texture =
    materials.Plants?.map || useLoader(THREE.TextureLoader,"Plant/Plants.jpg");

  useEffect(() => {
    // Loop through all materials and set NearestFilter for their textures
    Object.values(materials).forEach((material) => {
      const mat = material as THREE.Material; // Explicitly cast to THREE.Material
      if (
        mat instanceof THREE.MeshBasicMaterial ||
        mat instanceof THREE.MeshStandardMaterial
      ) {
        if (mat.map) {
          mat.map.minFilter = THREE.NearestFilter;
          mat.map.magFilter = THREE.NearestFilter;
          mat.map.needsUpdate = true;
        }
      }
    });
  }, [materials]);
  return (
    <group {...props} dispose={null}>
      <group position={[-10.879, -0.065, 5.911]} scale={0.2}>
        <mesh
          geometry={(nodes.Plants_03_1 as THREE.Mesh).geometry}
          material={materials.Plaster_02}
        />
        <mesh
          geometry={(nodes.Plants_03_2 as THREE.Mesh).geometry}
          material={materials.Plants}
        >
          {" "}
          <MeshWobbleMaterial factor={0.1} map={texture} transparent={true} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/plant_2.glb");
