/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 Arms.glb 
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import * as THREE from "three";
import { TextureLoader, NearestFilter, LinearMipMapLinearFilter } from "three";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = React.useRef<THREE.Group>(null);
  const { scene, animations } = useGLTF("Arms/Arms.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="arms_armature">
          <primitive object={nodes.spine002} />
          <primitive object={nodes.ik_handL} />
          <primitive object={nodes.ik_handR} />
          <skinnedMesh
            name="arms"
            geometry={(nodes.arms as THREE.Mesh).geometry}
            material={materials.arms}
            skeleton={(nodes.arms as THREE.SkinnedMesh).skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/Arms.glb");
