/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 sofa.glb 
*/

import { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

export default function Model(props: JSX.IntrinsicElements["group"]) {


  const { nodes, materials } = useGLTF("Sofa/sofa.glb");



  useEffect(() => {

    // Create the ShaderMaterial for the TV frame (or model)

    // Loop through all materials and set NearestFilter for their textures
    Object.values(materials).forEach((material: THREE.Material) => {
      if (
        material instanceof THREE.MeshBasicMaterial ||
        material instanceof THREE.MeshStandardMaterial
      ) {
        if (material.map) {
          material.map.minFilter = THREE.NearestFilter;
          material.map.magFilter = THREE.NearestFilter;
          material.map.needsUpdate = true;
        }
      }
    });


  }, [materials]);

  return (
      <group position={[10.876, 0.177, -3.175]} {...props} dispose={null} >
  
        <mesh
          geometry={(nodes.Armchair_08_1 as THREE.Mesh).geometry}
          material={materials.Wood_10}
        />
        <mesh
          geometry={(nodes.Armchair_08_2 as THREE.Mesh).geometry}
          material={materials.Fabric_11}
        />

      </group>
  );
}

useGLTF.preload("/sofa.glb");
