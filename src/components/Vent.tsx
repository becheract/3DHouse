/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 Vent.glb 
*/

import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("Vent/Vent.glb");

  useEffect(() => {
    // Set nearest filter for all materials of the model
    Object.values(materials).forEach((material: THREE.Material) => {
      if (
        material instanceof THREE.MeshBasicMaterial ||
        material instanceof THREE.MeshStandardMaterial
      ) {
        if (material.map) {
          material.map.minFilter = THREE.NearestFilter;
          material.map.magFilter = THREE.NearestFilter;
          material.map.needsUpdate = true;
        }
      }
    });
  }, [materials]);

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={(nodes.Ventilator as THREE.Mesh).geometry}
        material={materials.Ventilator}
        position={[-13.143, -0.063, 0.571]}
        scale={0.635}
      />
    </group>
  );
}

useGLTF.preload("/Vent.glb");
