/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 phone.glb 
*/

import { useEffect, useRef,useMemo, useState, act} from 'react'
import { useGraph, useThree } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import * as THREE from "three";

export default function Model(props : JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null)
  const { scene, animations } = useGLTF('Phone/phone.glb')
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions, names, mixer } = useAnimations(animations, group);
  const { camera } = useThree(); // Access the scene's camera
  const [phonePosition, setPhonePosition] = useState(props.position) 
  const phoneRef = useRef<THREE.Group>(null);

  useEffect(() => {
    const keyDownListener = (e: KeyboardEvent) => {
      if (e.key === "c" || e.key === "C" ) {
        if(phoneRef.current !== null){
          phoneRef.current.position.set(camera.position.x,camera.position.y, camera.position.z + 2)
          setPhonePosition(phoneRef.current.position)
        }
      }
    };

    document.addEventListener("keydown", keyDownListener);
    return () => {
      document.removeEventListener("keydown", keyDownListener);
    };
  }, [camera])

  useEffect(() => {
    console.log("actions")
    console.log(actions)
  })
  
  return (
    <group ref={phoneRef} {...props} dispose={null} position={phonePosition}>
      <group name="Scene" >
        <group name="Armature" position={[0, 0.179, 0]} scale={[0.99, 2.207, 2.207]}>
          <primitive object={nodes.Bone} />
          <skinnedMesh name="Cube" geometry={(nodes.Cube as THREE.Mesh).geometry} material={materials['Material.001']} skeleton={(nodes.Cube as THREE.SkinnedMesh).skeleton} />
          <skinnedMesh name="Cube001" geometry={(nodes.Cube001 as THREE.Mesh).geometry} material={materials['Material.001']} skeleton={(nodes.Cube001 as THREE.SkinnedMesh).skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/phone.glb')
